
CC_ROOT = $${PWD}/../
CC_ARCH_SUFFIX = 32-bit
contains(QMAKE_HOST.arch, x86_64):CC_ARCH_SUFFIX = 64-bit
CC_OS_TYPE = linux

CONFIG += c++11
CONFIG -= qt

DEFINES += LINUX ENABLE_MPG123

INCLUDEPATH += /usr/include/freetype2 /usr/include/GLFW

INCLUDEPATH += \
    $${CC_ROOT} \
    $${CC_ROOT}/cocos2dx \
    $${CC_ROOT}/cocos2dx/include \
    $${CC_ROOT}/cocos2dx/kazmath/include \
    $${CC_ROOT}/cocos2dx/platform/linux \
    $${CC_ROOT}/CocosDenshion/include \
    $${CC_ROOT}/extensions

CC_EXTERNAL_LIBS += \
    -lrt -lz  \
    -ljpeg -ltiff -lpng \
    -lfontconfig -lfreetype -lcurl \
    -lGLEW -lX11 -lfontconfig -lpthread -lGL -lglfw \
    -lmpg123 -logg -lvorbis -lvorbisfile -lopenal -lalut -lwebp \
    -lwebsockets

DEFINES += CC_USE_ARRAY_VECTOR=1
CONFIG(debug, debug|release) {
    DEFINES += COCOS2D_DEBUG=1 _DEBUG
    CC_BUILD_TYPE = debug
} else {
    DEFINES += COCOS2D_DEBUG=0 NDEBUG
    CC_BUILD_TYPE = release
}

CC_LIB_LOCATION = $${CC_ROOT}/lib/$${CC_OS_TYPE}/$${CC_BUILD_TYPE}

DEFINES += CC_ENABLE_CHIPMUNK_INTEGRATION

LINK_AGAINST_COCOS2DX = -L$${CC_LIB_LOCATION} -lcocos2dx $${CC_EXTERNAL_LIBS}

# Disable some warnings to make compiler output easier to read during development
DISABLED_WARNINGS = \
    -Wno-ignored-qualifiers \
    -Wno-unused-parameter \
    -Wno-sign-compare -Wno-unused-variable

*-g++* {
    DISABLED_WARNINGS += -Wno-psabi
    QMAKE_CFLAGS += -std=gnu99
}

*-g++*|*-clang* {
    QMAKE_CXXFLAGS_WARN_ON += $${DISABLED_WARNINGS} -Wno-reorder -Wno-overloaded-virtual
    QMAKE_CFLAGS_WARN_ON += $${DISABLED_WARNINGS}
}
